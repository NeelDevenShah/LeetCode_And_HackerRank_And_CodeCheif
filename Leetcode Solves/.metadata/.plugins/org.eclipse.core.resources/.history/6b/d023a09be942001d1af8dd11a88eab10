import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Sum4 {
	public static void main(String [] args)
	{
//		int arr[]=new int[] {1,0,-1,0,-2,2};
//		int target=0;
		
		int arr[]=new int[] {2, 2, 2, 2, 2};
		int target=8;
		System.out.println(fourSum(arr, 0));
	}
	
	public static List<List<Integer>> fourSum(int[] nums, int target)
	{
		List<List<Integer>> ans=new ArrayList<>();
		
		//Base Condition
		if(nums==null || nums.length<4)
		{
			return ans;
		}
		
		//Sort the array
		Arrays.sort(nums);
		
		//Loop For Each Element in the array
		for(int i=0;i<nums.length-3;i++)
		{
			if(i>0 && (nums[i]==nums[i-1]))
			{
				continue;
			}
			//Reducing the problem to the 3Sum problem
			for(int j=i+1;j<nums.length-2;j++)
			{
				if(j!=i+1 && nums[j]==nums[j-1])
				{
					continue;
				}
				
				//Starting And Ending Pointers
				int k=j+1;
				int l=nums.length-1;
				
				while(k<l)
				{
					//Reducing to two sum problem
					int total=nums[i]+nums[j]+nums[k]+nums[l];
					if(total<target)
					{
						k++;
					}
					else if(total>target)
					{
						l--;
					}
					else
					{
						ans.add(Arrays.asList(nums[i], nums[j], nums[k], nums[l]));
						k++;
						l--;
						//Checking For Skipping Duplicates
						while(k<l && nums[k]==nums[k-1]) {
							k++;
						}
						while(k<l && nums[l]==nums[l-1]) {
							l--;
						}
					}
				}
				
			}
		}
		return ans;
	}
}
